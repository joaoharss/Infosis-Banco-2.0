// <auto-generated />
using System;
using Infosis_Banco;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infosis_Banco.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20220427191337_Infosiscontrolev3")]
    partial class Infosiscontrolev3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Infosis_Banco.Beneficio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("NivelId")
                        .HasColumnType("int");

                    b.Property<int>("TipoBeneficioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NivelId");

                    b.HasIndex("TipoBeneficioId");

                    b.ToTable("Beneficios");
                });

            modelBuilder.Entity("Infosis_Banco.Cargo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cargos");
                });

            modelBuilder.Entity("Infosis_Banco.Deposito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepositoBeneficioId")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorDepositoFuncionario")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DepositoBeneficioId");

                    b.ToTable("Depositos");
                });

            modelBuilder.Entity("Infosis_Banco.DepositoBeneficio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BeneficioId")
                        .HasColumnType("int");

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorDepositoBeneficio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Vencimento")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BeneficioId");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("DepositoBeneficios");
                });

            modelBuilder.Entity("Infosis_Banco.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<long>("CPF")
                        .HasColumnType("bigint");

                    b.Property<string>("Endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ModalidadeCargoId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sobrenome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Telefone")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ModalidadeCargoId");

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("Infosis_Banco.ModalidadeCargo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CargoId")
                        .HasColumnType("int");

                    b.Property<int>("ModalidadeContratoId")
                        .HasColumnType("int");

                    b.Property<int>("NivelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CargoId");

                    b.HasIndex("ModalidadeContratoId");

                    b.HasIndex("NivelId");

                    b.ToTable("ModalidadeCargos");
                });

            modelBuilder.Entity("Infosis_Banco.ModalidadeContrato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Hora")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ModalidadeContratos");
                });

            modelBuilder.Entity("Infosis_Banco.Nivel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Niveis");
                });

            modelBuilder.Entity("Infosis_Banco.TipoBeneficio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<decimal>("PorcentagemPadrao")
                        .HasColumnType("DECIMAL");

                    b.Property<decimal>("ValorTipoBeneficio")
                        .HasColumnType("DECIMAL");

                    b.HasKey("Id");

                    b.ToTable("TipoBeneficios");
                });

            modelBuilder.Entity("Infosis_Banco.Beneficio", b =>
                {
                    b.HasOne("Infosis_Banco.Nivel", "Nivel")
                        .WithMany("Beneficios")
                        .HasForeignKey("NivelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Infosis_Banco.TipoBeneficio", "TipoBeneficio")
                        .WithMany("Beneficios")
                        .HasForeignKey("TipoBeneficioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Nivel");

                    b.Navigation("TipoBeneficio");
                });

            modelBuilder.Entity("Infosis_Banco.Deposito", b =>
                {
                    b.HasOne("Infosis_Banco.DepositoBeneficio", "DepositoBeneficio")
                        .WithMany()
                        .HasForeignKey("DepositoBeneficioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DepositoBeneficio");
                });

            modelBuilder.Entity("Infosis_Banco.DepositoBeneficio", b =>
                {
                    b.HasOne("Infosis_Banco.Beneficio", "Beneficio")
                        .WithMany("DepositoBeneficios")
                        .HasForeignKey("BeneficioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Infosis_Banco.Funcionario", "Funcionario")
                        .WithMany("DepositoBeneficios")
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Beneficio");

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("Infosis_Banco.Funcionario", b =>
                {
                    b.HasOne("Infosis_Banco.ModalidadeCargo", "ModalidadeCargo")
                        .WithMany("Funcionarios")
                        .HasForeignKey("ModalidadeCargoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ModalidadeCargo");
                });

            modelBuilder.Entity("Infosis_Banco.ModalidadeCargo", b =>
                {
                    b.HasOne("Infosis_Banco.Cargo", "Cargo")
                        .WithMany("ModalidadeCargos")
                        .HasForeignKey("CargoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Infosis_Banco.ModalidadeContrato", "ModalidadeContrato")
                        .WithMany("ModalidadeCargos")
                        .HasForeignKey("ModalidadeContratoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Infosis_Banco.Nivel", "Nivel")
                        .WithMany("ModalidadeCargos")
                        .HasForeignKey("NivelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cargo");

                    b.Navigation("ModalidadeContrato");

                    b.Navigation("Nivel");
                });

            modelBuilder.Entity("Infosis_Banco.Beneficio", b =>
                {
                    b.Navigation("DepositoBeneficios");
                });

            modelBuilder.Entity("Infosis_Banco.Cargo", b =>
                {
                    b.Navigation("ModalidadeCargos");
                });

            modelBuilder.Entity("Infosis_Banco.Funcionario", b =>
                {
                    b.Navigation("DepositoBeneficios");
                });

            modelBuilder.Entity("Infosis_Banco.ModalidadeCargo", b =>
                {
                    b.Navigation("Funcionarios");
                });

            modelBuilder.Entity("Infosis_Banco.ModalidadeContrato", b =>
                {
                    b.Navigation("ModalidadeCargos");
                });

            modelBuilder.Entity("Infosis_Banco.Nivel", b =>
                {
                    b.Navigation("Beneficios");

                    b.Navigation("ModalidadeCargos");
                });

            modelBuilder.Entity("Infosis_Banco.TipoBeneficio", b =>
                {
                    b.Navigation("Beneficios");
                });
#pragma warning restore 612, 618
        }
    }
}
